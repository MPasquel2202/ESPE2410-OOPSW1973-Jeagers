package ec.edu.espe.view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import javax.swing.JFrame;
import javax.swing.Timer;

/**
 *
 * @author Brandon Pazmino
 */
public class SplashScreenFrm extends javax.swing.JFrame {
       private MainMenuFrm mainMenu;

    /**
     * Creates new form FirstFrame
     */
    public SplashScreenFrm() {
        setUndecorated(true); 
        initComponents();
        setLocationRelativeTo(null);
        progressBarTimer();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pbCharge = new javax.swing.JProgressBar();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 204, 51));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MOLELogo.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Eras Demi ITC", 1, 18)); // NOI18N
        jLabel3.setText("MOLE Administrador de Projectos ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addComponent(pbCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(pbCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void progressBarTimer() {
        Timer mTimer = new Timer(45, (ActionEvent e) -> {
            if (pbCharge.getValue() < 100) {
                pbCharge.setValue(pbCharge.getValue() + 1);
                pbCharge.setStringPainted(true);
                pbCharge.setString("Loading... " + pbCharge.getValue() + "%");
            } else {
                ((Timer) e.getSource()).stop();
                this.dispose();
                new MainMenuFrm().setVisible(true); 
            }
        });
        mTimer.start(); 
    }
    
//    Project project = new Project.Builder("P001", "Nuevo Proyecto")
//    .setProjectDescription("Descripción del proyecto")
//    .setCustomer(customer)
//    .setStartDate(new Date())
//    .setClosingDate(new Date())
//    .setStartquote(5000)
//    .setOperationalStatus(ProjectStatus.ACTIVE)
//    .setQuoteStatus(ProjectStatus.PENDING)
//    .setPaid(true)
//    .setInvoiced(false)
//    .setPublic(true)
//    .setResponsiblePerson("Juan Pérez")
//    .build();
    

//public class Project implements ProjectData {
//
//    private String projectId;
//    private String projectTitle;
//    private String projectDescription;
//    private Customer customer;
//    private Date startDate;
//    private Date closingDate;
//    private double startquote;
//    private ProjectStatus operationalStatus;
//    private ProjectStatus quoteStatus;
//    private boolean paid;
//    private boolean invoiced;
//    private boolean isPublic;
//    private String responsiblePerson;  // Nuevo campo
//
//    private Project(Builder builder) {
//        this.projectId = builder.projectId;
//        this.projectTitle = builder.projectTitle;
//        this.projectDescription = builder.projectDescription;
//        this.customer = builder.customer;
//        this.startDate = builder.startDate;
//        this.closingDate = builder.closingDate;
//        this.startquote = builder.startquote;
//        this.operationalStatus = builder.operationalStatus;
//        this.quoteStatus = builder.quoteStatus;
//        this.paid = builder.paid;
//        this.invoiced = builder.invoiced;
//        this.isPublic = builder.isPublic;
//        this.responsiblePerson = builder.responsiblePerson; // Asignar el nuevo campo
//    }
//
//    @Override
//    public String getProjectId() {
//        return projectId;
//    }
//
//    @Override
//    public String getProjectTitle() {
//        return projectTitle;
//    }
//
//    @Override
//    public String getProjectDescription() {
//        return projectDescription;
//    }
//
//    @Override
//    public Customer getCustomer() {
//        return customer;
//    }
//
//    @Override
//    public Date getStartDate() {
//        return startDate;
//    }
//
//    @Override
//    public Date getClosingDate() {
//        return closingDate;
//    }
//
//    @Override
//    public double getStartquote() {
//        return startquote;
//    }
//
//    @Override
//    public ProjectStatus getOperationalStatus() {
//        return operationalStatus;
//    }
//
//    @Override
//    public ProjectStatus getQuoteStatus() {
//        return quoteStatus;
//    }
//
//    @Override
//    public boolean isPaid() {
//        return paid;
//    }
//
//    @Override
//    public boolean isInvoiced() {
//        return invoiced;
//    }
//
//    @Override
//    public boolean isPublic() {
//        return isPublic;
//    }
//
//    public String getResponsiblePerson() {  // Getter para el nuevo campo
//        return responsiblePerson;
//    }
//
//    public void setStartquote(double startquote) {
//        this.startquote = startquote;
//    }
//
//    public static class Builder {
//
//        private String projectId;
//        private String projectTitle;
//        private String projectDescription;
//        private Customer customer;
//        private Date startDate;
//        private Date closingDate;
//        private double startquote;
//        private ProjectStatus operationalStatus;
//        private ProjectStatus quoteStatus;
//        private boolean paid;
//        private boolean invoiced;
//        private boolean isPublic;
//        private String responsiblePerson; // Campo para la persona a cargo
//
//        public Builder(String projectId, String projectTitle) {
//            this.projectId = projectId;
//            this.projectTitle = projectTitle;
//        }
//
//        public Builder setProjectDescription(String projectDescription) {
//            this.projectDescription = projectDescription;
//            return this;
//        }
//
//        public Builder setCustomer(Customer customer) {
//            this.customer = customer;
//            return this;
//        }
//
//        public Builder setStartDate(Date startDate) {
//            this.startDate = startDate;
//            return this;
//        }
//
//        public Builder setClosingDate(Date closingDate) {
//            this.closingDate = closingDate;
//            return this;
//        }
//
//        public Builder setStartquote(double startquote) {
//            this.startquote = startquote;
//            return this;
//        }
//
//        public Builder setOperationalStatus(ProjectStatus operationalStatus) {
//            this.operationalStatus = operationalStatus;
//            return this;
//        }
//
//        public Builder setQuoteStatus(ProjectStatus quoteStatus) {
//            this.quoteStatus = quoteStatus;
//            return this;
//        }
//
//        public Builder setPaid(boolean paid) {
//            this.paid = paid;
//            return this;
//        }
//
//        public Builder setInvoiced(boolean invoiced) {
//            this.invoiced = invoiced;
//            return this;
//        }
//
//        public Builder setPublic(boolean isPublic) {
//            this.isPublic = isPublic;
//            return this;
//        }
//
//        public Builder setResponsiblePerson(String responsiblePerson) {  // Método para establecer la persona a cargo
//            this.responsiblePerson = responsiblePerson;
//            return this;
//        }
//
//        public Project build() {
//            return new Project(this);
//        }
//    }
//}




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar pbCharge;
    // End of variables declaration//GEN-END:variables
}
